{"version":3,"sources":["01_main.js","02_avatar.js"],"names":[],"mappingszaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\r\n\r\nconst completeLegend = document.querySelector('.js_complete_legend');\r\nconst designLegend = document.querySelector('.js_design_legend');\r\nconst shareLegend = document.querySelector('.js_share_legend');\r\n\r\nconst completeForm = document.querySelector('.js_complete_form');\r\nconst designForm = document.querySelector('.js_design_form');\r\nconst shareForm = document.querySelector('.js_share_form');\r\n\r\nconst arrow = document.querySelectorAll('.js_arrow');\r\n\r\nconst stylePreview = document.querySelector('.js_style_preview');\r\nconst style_001 = document.querySelector('#style_001');\r\nconst style_002 = document.querySelector('#style_002');\r\nconst style_003 = document.querySelector('#style_003');\r\n\r\n// CONSTANTES PARA LAS IMÁGENES DE MINIATURA Y AVATAR DE LA TARJETA \"PREVIEW\".\r\n\r\nconst profileImage = document.querySelector('.js__profile-image');\r\nconst profilePreview = document.querySelector('.js__profile-preview');\r\n\r\nfunction openForm(legendId) {\r\n  if (legendId === 'completeLegend') {\r\n    completeForm.classList.toggle('collapsed');\r\n    designForm.classList.add('collapsed');\r\n    shareForm.classList.add('collapsed');\r\n  }\r\n\r\n  if (legendId === 'designLegend') {\r\n    designForm.classList.toggle('collapsed');\r\n    completeForm.classList.add('collapsed');\r\n    shareForm.classList.add('collapsed');\r\n  }\r\n\r\n  if (legendId === 'shareLegend') {\r\n    shareForm.classList.toggle('collapsed');\r\n    designForm.classList.add('collapsed');\r\n    completeForm.classList.add('collapsed');\r\n  }\r\n}\r\n\r\n// arrow[0] = design\r\n// arrow[1] = complete\r\n// arrow[2] = share\r\n\r\nfunction rotateArrow(legendId) {\r\n  if (legendId === 'completeLegend') {\r\n    arrow[1].classList.toggle('toggle_arrow');\r\n    arrow[0].classList.add('toggle_arrow');\r\n    arrow[2].classList.add('toggle_arrow');\r\n  }\r\n\r\n  if (legendId === 'designLegend') {\r\n    arrow[0].classList.toggle('toggle_arrow');\r\n    arrow[1].classList.add('toggle_arrow');\r\n    arrow[2].classList.add('toggle_arrow');\r\n  }\r\n\r\n  if (legendId === 'shareLegend') {\r\n    arrow[2].classList.toggle('toggle_arrow');\r\n    arrow[1].classList.add('toggle_arrow');\r\n    arrow[0].classList.add('toggle_arrow');\r\n  }\r\n}\r\n\r\nfunction handleCollapsed(event) {\r\n  event.preventDefault();\r\n  const legendId = event.currentTarget.id;\r\n  rotateArrow(legendId);\r\n  openForm(legendId);\r\n}\r\n\r\ncompleteLegend.addEventListener('click', handleCollapsed);\r\n\r\ndesignLegend.addEventListener('click', handleCollapsed);\r\n\r\nshareLegend.addEventListener('click', handleCollapsed);\r\n\r\n//\r\n//\r\n// Mostrar el texto mientras se escribe\r\n//\r\n//\r\n\r\n// Identificar los elementos de los que se recoge la información:\r\n// const realTimeNameInput = document.querySelector('.js_name_input');\r\n// const realTimeOcupationInput = document.querySelector('.js_ocupation_input');\r\n\r\n// // Identificar los elementos sobre los que se va a pintar:\r\n// const realTimeName = document.querySelector('.js_name');\r\n// const realTimeOcupation = document.querySelector('.js_ocupation');\r\n\r\n// function showName() {\r\n//   realTimeName.innerHTML = realTimeNameInput.value;\r\n// }\r\n\r\n// function showOcupation() {\r\n\r\n//   realTimeOcupation.innerHTML = realTimeOcupationInput.value;\r\n// }\r\n\r\n// realTimeNameInput.addEventListener('keyup', showName);\r\n// realTimeOcupationInput.addEventListener('keyup', showOcupation);\r\n\r\n//\r\n//\r\n// Cambiar los colores de la tarjeta Preview\r\n//\r\n//\r\n\r\nfunction changeColorStyle(event) {\r\n  const styleX = event.currentTarget.id;\r\n  if (styleX === 'style_001') {\r\n    stylePreview.classList.add('style_001');\r\n    stylePreview.classList.remove('style_002');\r\n    stylePreview.classList.remove('style_003');\r\n  }\r\n  if (styleX === 'style_002') {\r\n    stylePreview.classList.add('style_002');\r\n    stylePreview.classList.remove('style_001');\r\n    stylePreview.classList.remove('style_003');\r\n  }\r\n  if (styleX === 'style_003') {\r\n    stylePreview.classList.add('style_003');\r\n    stylePreview.classList.remove('style_002');\r\n    stylePreview.classList.remove('style_001');\r\n  }\r\n}\r\n\r\nstyle_001.addEventListener('click', changeColorStyle);\r\nstyle_002.addEventListener('click', changeColorStyle);\r\nstyle_003.addEventListener('click', changeColorStyle);\r\n\r\n///DESDE AQUÍ!!\r\n\r\n//CONSTANTE DATA\r\n//En una misma variable creo un objeto que guarde todos los valores que la usuaria escriba, es útil para luego pasar todos esos datos al servidor.\r\nlet data = {\r\n  palette: 1,\r\n  name: '',\r\n  job: '',\r\n  phone: '',\r\n  email: '',\r\n  linkedin: '',\r\n  github: '',\r\n  photo: '',\r\n};\r\n\r\nconst inputsForm = document.querySelector('.js_allInputs'); //PRIMER DIV DEBAJO DE SECTION INPUTS\r\nconst emailIcon = document.querySelector('.js_icon_email'); //CREO CLASE PARA ICONOS RRSS Y ME LOS TRAIGO\r\nconst phoneIcon = document.querySelector('.js_icon_phone');\r\nconst linkedinIcon = document.querySelector('.js_icon_linkedin');\r\nconst githubIcon = document.querySelector('.js_icon_github');\r\n\r\n//CON ESTA FUNCIÓN RECOJO LOS DATOS DE LA USUARIA Y SE LOS DOY COMO VALOR A LA CONST DATA\r\nfunction handleData(event) {\r\n  const inputType = event.target;\r\n  if (inputType.id === 'name') {\r\n    data.name = inputType.value;\r\n  } else if (inputType.id === 'job') {\r\n    data.job = inputType.value;\r\n  } else if (inputType.id === 'email') {\r\n    data.email = inputType.value;\r\n  } else if (inputType.id === 'phone') {\r\n    data.phone = inputType.value;\r\n  } else if (inputType.id === 'linkedin') {\r\n    data.linkedin = inputType.value;\r\n  } else if (inputType.id === 'github') {\r\n    data.github = inputType.value;\r\n  } else if (inputType.id === 'photo') {\r\n    data.photo = inputType.value;\r\n  }\r\n  previewUser(); //llamo a la función que me va cambiando el valor de la tarjeta preview, con lo que he ido guardando en el data\r\n}\r\n\r\n//Función que cambia los valores del preview con los datos que se van pasando a la constante data.\r\nconst realTimeName = document.querySelector('.js_name');\r\nconst realTimeOcupation = document.querySelector('.js_ocupation');\r\n\r\nfunction previewUser() {\r\n  realTimeName.innerHTML = data.name;\r\n  realTimeOcupation.innerHTML = data.job;\r\n  //Para que cuando quite mi nombre vuelva a salir lo que estaba escrito en la tarjeta, nombre y apellidos y profesión\r\n  if (data.name === '') {\r\n    realTimeName.innerHTML = 'Nombre y Apellidos';\r\n  } else {\r\n    realTimeName.innerHTML = data.name;\r\n  }\r\n\r\n  if (data.job === '') {\r\n    realTimeOcupation.innerHTML = 'Profesión';\r\n  } else {\r\n    realTimeOcupation.innerHTML = data.job;\r\n  }\r\n\r\n  emailIcon.href = `mailto:${data.email}`; //Ponemos target=\"_blank\", en los enlaces del main-preview?\r\n  phoneIcon.href = `tel:${data.phone}`;\r\n  linkedinIcon.href = data.linkedin;\r\n  githubIcon.href = data.github;\r\n}\r\n\r\ninputsForm.addEventListener('keyup', handleData);\r\n\r\n// Reset button\r\n\r\nconst btnReset = document.querySelector('.js-reset-btn');\r\nconst inputName = document.querySelector('.js_name_input');\r\nconst inputJob = document.querySelector('.js_ocupation_input');\r\nconst inputEmail = document.querySelector('.js_input_email');\r\nconst inputPhone = document.querySelector('.js_input_phone');\r\nconst inputLinkedin = document.querySelector('.js_input_linkedin');\r\nconst inputGithub = document.querySelector('.js_input_github');\r\n\r\nfunction resetPreview() {\r\n  // Resetea los valores del objeto a cadenas vacias.\r\n  data.palette = 1;\r\n  data.name = '';\r\n  data.job = '';\r\n  data.email = '';\r\n  data.phone = '';\r\n  data.linkedin = '';\r\n  data.github = '';\r\n  data.photo = '';\r\n\r\n  // Resetea los valores del formurio a cadenas vacias.\r\n  inputName.value = '';\r\n  inputJob.value = '';\r\n  inputEmail.value = '';\r\n  inputPhone.value = '';\r\n  inputLinkedin.value = '';\r\n  inputGithub.value = '';\r\n\r\n  // Resetea los valores por defecto de la tarjeta de vista previa.\r\n  realTimeName.innerHTML = 'Nombre y Apellidos';\r\n  realTimeOcupation.innerHTML = 'Profesión';\r\n}\r\n\r\nfunction handleReset(event) {\r\n  event.preventDefault();\r\n  resetPreview();\r\n  //previewUser();\r\n  profileImage.style.backgroundImage = '';\r\n  profilePreview.style.backgroundImage = '';\r\n}\r\n\r\nbtnReset.addEventListener('click', handleReset);\r\n\r\n//FORM\r\n\r\nconst name = document.getElementById('name');\r\nconst job = document.getElementById('job');\r\nconst email = document.getElementById('email');\r\nconst phone = document.getElementById('phone');\r\nconst linkedin = document.getElementById('linkedin');\r\nconst github = document.getElementById('github');\r\nconst listInputs = document.querySelectorAll('.js__inputs');\r\n\r\nconst form = document.querySelector('.js__form');\r\nform.addEventListener('keyup', (e) => {\r\n  e.preventDefault();\r\n  validationForm();\r\n});\r\n\r\nfunction validationForm() {\r\n  let rexName = / ^ [a-zA-Z] + [a-zA-Z] + $ /;\r\n  let rexEmail = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n\r\n  listInputs.forEach((element) => {\r\n    element.lastElementChild.innerHTML = '';\r\n  });\r\n\r\n  if (name.value.length < 1 || name.value.trim() === '') {\r\n    name.classList.add('wrong');\r\n    name.classList.remove('right');\r\n    errorMessage('name', 'Por favor ingresa un nombre valido');\r\n  } else {\r\n    name.classList.remove('wrong');\r\n    name.classList.add('right');\r\n  }\r\n  if (job.value.length < 1 || job.value.trim() === '') {\r\n    job.classList.add('wrong');\r\n    job.classList.remove('right');\r\n    errorMessage('job', 'Por favor ingresa un puesto valido');\r\n  } else {\r\n    job.classList.remove('wrong');\r\n    job.classList.add('right');\r\n  }\r\n  if (\r\n    email.value.length < 1 ||\r\n    email.value.trim() === '' ||\r\n    !rexEmail.test(email.value)\r\n  ) {\r\n    email.classList.add('wrong');\r\n    email.classList.remove('right');\r\n    errorMessage('email', 'Por favor ingresa un email valido');\r\n  } else {\r\n    email.classList.remove('wrong');\r\n    email.classList.add('right');\r\n  }\r\n  if (\r\n    phone.value.length < 9 ||\r\n    phone.value.trim() === '' ||\r\n    isNaN(phone.value)\r\n  ) {\r\n    phone.classList.add('wrong');\r\n    phone.classList.remove('right');\r\n    errorMessage('phone', 'Por favor ingresa un teléfono valido');\r\n  } else {\r\n    phone.classList.remove('wrong');\r\n    phone.classList.add('right');\r\n  }\r\n  if (linkedin.value.length < 1 || linkedin.value.trim() === '') {\r\n    linkedin.classList.add('wrong');\r\n    linkedin.classList.remove('right');\r\n    errorMessage('linkedin', 'Por favor ingresa una cuenta valida');\r\n  } else {\r\n    linkedin.classList.remove('wrong');\r\n    linkedin.classList.add('right');\r\n  }\r\n  if (github.value.length < 1 || github.value.trim() === '') {\r\n    github.classList.add('wrong');\r\n    github.classList.remove('right');\r\n    errorMessage('github', 'Por favor ingresa una cuenta valida');\r\n  } else {\r\n    github.classList.remove('wrong');\r\n    github.classList.add('right');\r\n  }\r\n}\r\n\r\nfunction errorMessage(inputClass, messages) {\r\n  let element = document.querySelector(`.${inputClass}`);\r\n  element.lastElementChild.innerHTML = messages;\r\n}\r\n\r\n//TWITTER!!!!!!\r\n\r\nconst createButton = document.querySelector('.js_create_button'); //Botón de crear tarjeta\r\nconst urlTwitter = document.querySelector('.js_url'); //URL twitter\r\nconst buttonTwitter = document.querySelector('.share__button--in');\r\n//botón de compartir de twitter\r\nconst feedBack = document.querySelector('.js_share__title--done'); //Frase que dice si se ha creado bien o no\r\nconst buttonOrange = document.querySelector('.js_buttonOrange');\r\n\r\nfunction handleClickCreateButton(event) {\r\n  event.preventDefault();\r\n\r\n  // Guardara en localStorage.\r\n  setLocalStorage();\r\n\r\n  fetch('https://awesome-profile-cards.herokuapp.com/card', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((serverResp) => {\r\n      if (serverResp.success === false) {\r\n        feedBack.innerHTML = 'Debe faltar algún dato del formulario...';\r\n      } else {\r\n        buttonOrange.classList.add('buttonOrange');\r\n        console.log('001');\r\n        feedBack.innerHTML = 'Aquí tienes tu tarjeta:';\r\n        console.log('002');\r\n        urlTwitter.innerHTML = serverResp.cardURL;\r\n        urlTwitter.href = serverResp.cardURL;\r\n      }\r\n    });\r\n}\r\n\r\nfunction shareOnTwitter(event) {\r\n  event.preventDefault();\r\n  let url = `https://twitter.com/intent/tweet?text=He%20creado%20una%20tarjeta%20profesional.%20¡Conóceme!%20&url=${urlTwitter.href}`;\r\n  window.location.href = url;\r\n}\r\n\r\ncreateButton.addEventListener('click', handleClickCreateButton);\r\nbuttonTwitter.addEventListener('click', shareOnTwitter);\r\n\r\n//\r\n// LOCALSTORAGE\r\n//\r\n//\r\n// Añade el objeto \"data\" a localStorage.\r\n//\r\nfunction setLocalStorage() {\r\n  console.log('Entra en setLocalStorage 1');\r\n  // Convierto a \"string\" el objeto data.\r\n  const locStoData = JSON.stringify(data);\r\n  localStorage.setItem('localData', locStoData);\r\n  console.log('Entra en setLocalStorage 2', locStoData);\r\n}\r\n\r\n//\r\n// Obtiene la información del objeto \"data\" de localStorage.\r\n//\r\nfunction getLocalStorage() {\r\n  console.log('Entra en getLocalStorage', getLocalStorage);\r\n  let locStoData = localStorage.getItem('localData');\r\n\r\n  if (locStoData === null) {\r\n    locStoData = [];\r\n  } else {\r\n    const parseLocStoData = JSON.parse(locStoData);\r\n    data = parseLocStoData;\r\n\r\n    inputName.value = data.name;\r\n    inputJob.value = data.job;\r\n    inputEmail.value = data.email;\r\n    inputPhone.value = data.phone;\r\n    inputLinkedin.value = data.linkedin;\r\n    inputGithub.value = data.github;\r\n    profileImage.style.backgroundImage = `url(${data.photo})`;\r\n    profilePreview.style.backgroundImage = `url(${data.photo})`;\r\n\r\n    realTimeName.innerHTML = data.name;\r\n    realTimeOcupation.innerHTML = data.job;\r\n    emailIcon.href = `mailto:${data.email}`;\r\n    phoneIcon.href = `tel:${data.phone}`;\r\n    linkedinIcon.href = data.linkedin;\r\n    githubIcon.href = data.github;\r\n  }\r\n}\r\n\r\ngetLocalStorage();\r\n","'use strict';\n\nconst fr = new FileReader();\nconst fileField = document.querySelector('.js__profile-upload-btn');\n// const profileImage = document.querySelector('.js__profile-image');\n// const profilePreview = document.querySelector('.js__profile-preview');\n\n/**\n * Recoge el archivo añadido al campo de tipo \"file\"\n * y lo carga en nuestro objeto FileReader para que\n * lo convierta a algo con lo que podamos trabajar.\n * Añade un listener al FR para que ejecute una función\n * al tener los datos listos\n * @param {evento} e\n */\nfunction getImage(e) {\n  const myFile = e.currentTarget.files[0];\n  fr.addEventListener('load', writeImage);\n  fr.readAsDataURL(myFile);\n}\n\n/**\n * Una vez tenemos los datos listos en el FR podemos\n * trabajar con ellos ;)\n */\nfunction writeImage() {\n  /* En la propiedad `result` de nuestro FR se almacena\n   * el resultado. Ese resultado de procesar el fichero que hemos cargado\n   * podemos pasarlo como background a la imagen de perfil y a la vista previa\n   * de nuestro componente.\n   */\n  profileImage.style.backgroundImage = `url(${fr.result})`;\n  profilePreview.style.backgroundImage = `url(${fr.result})`;\n  data.photo = fr.result;\n}\n\n/**\n * Añadimos los listeners necesarios:\n * - al botón visible para generar el click automático\n * - al campo oculto para cuando cambie su value\n */\nfileField.addEventListener('change', getImage);\n"]}